%% combinación de los constructivos en el caso infactible 
%% sacar un producto por medio de un indice de sensibilidad 


clear all
clc


c=[3 4 8 3 6 4 10 4 10 9];
v=[6 4 3 3 3 5 9 8 5 10];
b=26;

%% se espera iniciar desde una solución infactible (mochila llena con todos
%% los productos) y empezar a retirar productos por medio de un indice


un=c./v;
U=[c' v' un'];
Orden=zeros(1,3);
i=0;
while U~=0  %% se hace mientras hallan productos que ordenar

%% producto debido al indice de sensibilidad costo/volumen 
i=i+1; 
[s,j]=min(U(:,3)); %ordenamiento debido al costo/volumen 
Orden(i,:)=U(j,:); % el primer producto será el menor con respecto al indice de sensibilidad
U(j,:)=[];

%% producto debido al indice de sensibilidad volumen 

if U~=0              % para evitar errores cuando la matrix se vuelve cero 
i=i+1;               % ingresar siguiente producto
[s,j]=max(U(:,3));   % ordenamiento debido al volumen 
Orden(i,:)=U(j,:);   % el primer producto será el menor con respecto al indice de sensibilidad
U(j,:)=[];
end


end

%% algoritmo para sacar productos de la mochila 

x=ones(size(Orden,1),1);

i=size(Orden,1);
while b<= Orden(:,2)'*x
volumen=Orden(:,2)'*x
x(i,1)=0; 
i=i-1;  %% se sacan los productos de menor costo 

end

volumen=Orden(:,2)'*x
costo=Orden(:,1)'*x